import java.util.*;

public class projects{
    public static boolean isSafe(char[][] board,int row,int col,int n){
        //for columns
        for(int i=0;i<row;i++){
            if(board[i][col]=='Q'){
                return false;
            }
        }

        //for upper left(it will also check for the lower one)
        for(int i=row-1, j=col-1;i>=0 && j>=0;i--,j--){
            if(board[i][j]=='Q'){
                return false;

            }

        }
        //for upper right(it will also check for the lower one)
        for(int i=row-1,j=col+1;i>=0 && j<n;i--,j++){
            if(board[i][j]=='Q'){
                return false;
            }
        }
        return true; //Safe to place the Queens


    }
    public static void storeSolution(char[][] board, List<List<String>>solution, int n){
        List<String> currSolution=new ArrayList<>();  // for the i/p of new variable to store the value at for the variable solution

        for(int i=0;i<n;i++){
            String rowString=new String(board[i]);
            currSolution.add(rowString);

        }
        solution.add(currSolution);

    }

    public static void solveNQueens(int row, char[][] board,List<List<String>> solution,int n){
        if(row==n){
            storeSolution(board, solution, n);
            return;

        }
        //placements of the Queens on the board
        for(int col=0;col<n;col++){
            if(isSafe(board, row, col, n)){
                board[row][col]='Q'; //place the queens
                solveNQueens(row+1, board, solution, n);  //recure back
                board[row][col]='.';  //remove queens by backtracking and print '.'

            }

        }
    }

    public static void main(String[] args) {
        int n=4;
        char[][]board=new char[n][n];
        List<List<String>> solutions=new ArrayList<>();

        //initialization of the board

        for(int i=0;i<n;i++){
            Arrays.fill(board[i],'.');


        }
        solveNQueens(0, board, solutions, n);


        System.out.println("Total solutions for "+n+" -Queens are: " + solutions.size());
        for(List<String> solution : solutions){
            for(String row: solution){
                System.out.println(row);

            }
            System.out.println();

        }

          

    }
}
